				
----- $_product will need to be defined and in scope. 
				
<?php if($_product->getOptions()){ ?>
<div class="input">
    <?php $_Coptions = Mage::helper('core')->decorateArray($_product->getOptions()); 
	   $blOption = Mage::app()->getLayout()->createBlock("Mage_Catalog_Block_Product_View_Options"); 
	   $blOption->addOptionRenderer("default","catalog/product_view_options_type_default","catalog/product/view/options/type/default.phtml");
	   $blOption->addOptionRenderer("text","catalog/product_view_options_type_text","catalog/product/view/options/type/text.phtml");	    	    
	   $blOption->addOptionRenderer("file","catalog/product_view_options_type_file","catalog/product/view/options/type/file.phtml");
	   $blOption->addOptionRenderer("select","catalog/product_view_options_type_select","catalog/product/view/options/type/select.phtml");
	   $blOption->addOptionRenderer("date","catalog/product_view_options_type_date","catalog/product/view/options/type/date.phtml") ;
	   $blOption->setProduct($_product); ?>
    <dl>
    <?php foreach($_Coptions as $_option): ?>
	<?php echo $blockOption->getOptionHtml($_option) ?>
    <?php endforeach; ?>
   </dl>
</div>
<?php } ?>

-------------------------

--- get different orders
<?php 
//$completeorders = Mage::getResourceModel('sales/order_collection')
$completeorders = Mage::getModel('sales/order')->getCollection()
			->addFieldToSelect('*')
			->addFieldToFilter('customer_id', Mage::getSingleton('customer/session')->getCustomer()->getId())
			//->addFieldToFilter('state', array('in' => Mage::getSingleton('sales/order_config')->getVisibleOnFrontStates()))
			->addFieldToFilter('status', 'complete')
			->setOrder('created_at', 'desc');
//var_dump($completeorders); 
echo 'Completed:'; echo '<br />';
foreach ($completeorders as $corder){ var_dump( $corder->getData() ); echo '<br />'; }

//$pendingorders = Mage::getResourceModel('sales/order_collection')
$pendingorders = Mage::getModel('sales/order')->getCollection()
			->addFieldToSelect('*')
			->addFieldToFilter('customer_id', Mage::getSingleton('customer/session')->getCustomer()->getId())
			//->addFieldToFilter('state', array('in' => Mage::getSingleton('sales/order_config')->getVisibleOnFrontStates()))
			->addFieldToFilter( 'status', array( array('eq'=>'processing'), array('eq'=>'pending') ) )
			//->addFieldToFilter('status', 'pending_payment')
			->setOrder('created_at', 'desc');
//var_dump($pendingorders); 
echo 'Pending:'; echo '<br />';
foreach ($pendingorders as $porder){ var_dump( $porder->getData() ); echo '<br />'; }

//$cancelledorders = Mage::getResourceModel('sales/order_collection')
$cancelledorders = Mage::getModel('sales/order')->getCollection()
			->addFieldToSelect('*')
			->addFieldToFilter('customer_id', Mage::getSingleton('customer/session')->getCustomer()->getId())
			//->addFieldToFilter('state', array('in' => Mage::getSingleton('sales/order_config')->getVisibleOnFrontStates()))
			->addFieldToFilter('status', 'canceled')
			->setOrder('created_at', 'desc');
//var_dump($cancelledorders); 
echo 'Cancelled:'; echo '<br />';
foreach ($cancelledorders as $cnorder){ var_dump( $cnorder->getData() ); echo '<br />'; }
?>

------ order display using product images
<div class="dashboard">
<?php 
//$completeorders = Mage::getResourceModel('sales/order_collection')
$completeorders = Mage::getModel('sales/order')->getCollection()
			->addFieldToSelect('*')
			->addFieldToFilter('customer_id', Mage::getSingleton('customer/session')->getCustomer()->getId())
			//->addFieldToFilter('state', array('in' => Mage::getSingleton('sales/order_config')->getVisibleOnFrontStates()))
			->addFieldToFilter('status', 'complete')
			->setOrder('created_at', 'desc');
//var_dump($completeorders); 
echo 'Completed:'; echo '<br />';
foreach ($completeorders as $corder){ 
    //var_dump( $corder->getData() ); echo '<br />';
    //$corder = Mage::getModel('sales/order')->load($_corder['entity_id']); var_dump($corder->getData()); echo '<br />'; 
}

//$pendingorders = Mage::getResourceModel('sales/order_collection')
$pendingorders = Mage::getModel('sales/order')->getCollection()
			->addFieldToSelect('*')
			->addFieldToFilter('customer_id', Mage::getSingleton('customer/session')->getCustomer()->getId())
			//->addFieldToFilter('state', array('in' => Mage::getSingleton('sales/order_config')->getVisibleOnFrontStates()))
			->addFieldToFilter( 'status', array( array('eq'=>'processing'), array('eq'=>'pending') ) )
			//->addFieldToFilter('status', 'pending_payment')
			->setOrder('created_at', 'desc');  //var_dump($pendingorders); 
echo 'Pending:'; echo '<br />';
foreach ($pendingorders as $porder){ 
    //var_dump( $porder->getData() ); echo '<br />'; 
    $_porder = Mage::getModel('sales/order')->load($porder['entity_id']); //var_dump($_porder->getData()); echo '<br />'; 
    $_ordData = $_porder->getData(); echo $_ordData['increment_id'];  echo '<br />'; 

    $items = $_porder->getAllItems(); //var_dump($items);
    foreach ($items as $item){ $pdata = $item->getData(); //var_dump( $item->getData() ); 
	$_pr = Mage::getModel('catalog/product')->load($pdata['product_id']); //var_dump( $_pr->getData() );
	echo '<img src="'.$_pr->getImageUrl().'" alt="" />';
    }
}

//$cancelledorders = Mage::getResourceModel('sales/order_collection')
$cancelledorders = Mage::getModel('sales/order')->getCollection()
			->addFieldToSelect('*')
			->addFieldToFilter('customer_id', Mage::getSingleton('customer/session')->getCustomer()->getId())
			//->addFieldToFilter('state', array('in' => Mage::getSingleton('sales/order_config')->getVisibleOnFrontStates()))
			->addFieldToFilter('status', 'canceled')
			->setOrder('created_at', 'desc');
//var_dump($cancelledorders); 
echo 'Cancelled:'; echo '<br />';
foreach ($cancelledorders as $cnorder){ var_dump( $cnorder->getData() ); echo '<br />'; }
?>
</div>

--- add pager to collection
$pager = $this->getLayout()->createBlock('page/html_pager', 'custom.pager');
$pager->setAvailableLimit(array(5=>5,10=>10,20=>20,'all'=>'all'));
$pager->setCollection($this->getCollection());
$this->setChild('pager', $pager);
$this->getCollection()->load();
[http://excellencemagentoblog.com/blog/2011/10/18/magento-collection-paging/]

----- html pager to a collection
$custom_collection = Mage::getModel('devins_module/entity')->getCollection();
$pager = $this->getLayout()->createBlock('page/html_pager', 'custom.pager');
$pager->setAvailableLimit(array(15=>15));
$pager->setCollection($custom_collection);
echo $pager;

----- html pager
$pager = $this->getLayout()->createBlock('page/html_pager', 'custom.pager');
$pager->setAvailableLimit(array(10 => 10, 15 => 15, 20 => 20, 30 => 30, 40 => 40, 50 => 50 ));
$pager->setCollection($pendingorders); echo $pager->toHtml();

----- payment and address from order
  $_porder = Mage::getModel('sales/order')->load($porder['entity_id']); //var_dump($_porder->getData()); echo '<br />';
   
   //Get the id of the orders shipping address 
   $shippingId = $_porder->getShippingAddress()->getId(); 
   // Get shipping address data using the id 
   $address = Mage::getModel('sales/order_address')->load($shippingId); 
   // Display the shipping address data array on screen var_dump($address);
   print_r( $address->getData() );
<?php echo $payment_method = $_porder->getPayment()->getMethodInstance()->getTitle(); ?>

----- get all mathods for an object
$class_name = get_class($object);
$methods = get_class_methods($class_name);
echo "Methods for class $class_name \n<br />\n";
foreach($methods as $method)
{
    var_dump($method);
}


